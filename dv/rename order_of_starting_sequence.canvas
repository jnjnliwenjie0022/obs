{
	"nodes":[
		{"id":"4bd04e8d572a5815","type":"text","text":"SEQ_OR_ITEM可以是seq or \ncast(A,B): A->B\ncast return value: 0是錯誤\nA為uvm_sequence_base\nB如果為uvm_sequence: A可以涵蓋B, 正確 ,return 1\nB如果為uvm_sequence_item: A不可以涵蓋B. 不正確, return 0","x":-1142,"y":-1640,"width":718,"height":260},
		{"id":"be1a895e720a903f","type":"text","text":"[C++ dynamic_cast](https://blog.csdn.net/hongkangwl/article/details/21161713\ncast返回成功的條件: cast(A,B) A->B\nA指標的物件記憶體空空間能**完全涵蓋**B指標所指向的物件記憶體空空間","x":-1142,"y":-1800,"width":718,"height":120},
		{"id":"20c575c4d553602b","type":"text","text":"```verilog\n`define uvm_do_on_pri_with(SEQ_OR_ITEM, SEQR, PRIORITY, CONSTRAINTS) \\\n  begin \\\n  uvm_sequence_base __seq; \\\n  `uvm_create_on(SEQ_OR_ITEM, SEQR) \\\n  if (!$cast(__seq,SEQ_OR_ITEM)) start_item(SEQ_OR_ITEM, PRIORITY);\\\n  if ((__seq == null || !__seq.do_not_randomize) && !SEQ_OR_ITEM.randomize() with CONSTRAINTS ) begin \\\n    `uvm_warning(\"RNDFLD\", \"Randomization failed in uvm_do_with action\") \\\n  end\\\n  if (!$cast(__seq,SEQ_OR_ITEM)) finish_item(SEQ_OR_ITEM, PRIORITY); \\\n  else __seq.start(SEQR, this, PRIORITY, 0); \\\n  end\n```","x":-1142,"y":-2280,"width":1900,"height":440},
		{"id":"987705231ad3abe4","type":"text","text":"```verilog\n`define uvm_create_on(SEQ_OR_ITEM, SEQR) \\\n  begin \\\n  uvm_object_wrapper w_; \\\n  w_ = SEQ_OR_ITEM.get_type(); \\\n  $cast(SEQ_OR_ITEM , create_item(w_, SEQR, `\"SEQ_OR_ITEM`\"));\\\n  end\n```","x":-400,"y":-1790,"width":1158,"height":410},
		{"id":"0ac46737673d4f6a","type":"text","text":"\n```verilog\n// Function: create_item\n  //\n  // Create_item will create and initialize a sequence_item or sequence\n  // using the factory.  The sequence_item or sequence will be initialized\n  // to communicate with the specified sequencer.\n\n  protected function uvm_sequence_item create_item(uvm_object_wrapper type_var, \n                                                   uvm_sequencer_base l_sequencer, string name);\n\n    uvm_coreservice_t cs = uvm_coreservice_t::get();                                                     \n    uvm_factory factory=cs.get_factory();\n    $cast(create_item,  factory.create_object_by_type( type_var, this.get_full_name(), name ));\n\n    create_item.set_item_context(this, l_sequencer);\n  endfunction\n```","x":-540,"y":-1320,"width":1380,"height":920},
		{"id":"a8804fe97f067bd5","type":"file","file":"dv/include/Pasted image 20240520213839.png","x":-1760,"y":-2280,"width":478,"height":940}
	],
	"edges":[
		{"id":"c3f40defaf7e62ac","fromNode":"20c575c4d553602b","fromSide":"left","toNode":"be1a895e720a903f","toSide":"left"},
		{"id":"2b0998875fdca8e0","fromNode":"be1a895e720a903f","fromSide":"left","toNode":"4bd04e8d572a5815","toSide":"left"},
		{"id":"7992c10e28b49388","fromNode":"20c575c4d553602b","fromSide":"bottom","toNode":"987705231ad3abe4","toSide":"top"},
		{"id":"7407842de8d6f55f","fromNode":"987705231ad3abe4","fromSide":"bottom","toNode":"0ac46737673d4f6a","toSide":"top"}
	]
}